services:
  php:
    user: 1000:1000
    build:
      dockerfile: .docker/php/Dockerfile
      target: php-dev-base
      context: .
    environment:
      - DOMAIN_NAME=default:symfony.loc
    labels:
      - "co.elastic.logs/enabled=true"
      - "traefik.enable=true"
      - "traefik.http.routers.php.rule=Host(`symfony.localhost`)"
      - "traefik.http.routers.php.entrypoints=web"
    volumes:
      - ~/.composer:/var/www/.composer
      - .:/var/www/html

  traefik:
    image: "traefik:v2.4"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    profiles:
      - traefik

  docker-hostmanager:
    image: dkarlovi/docker-hostmanager
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/hosts:/hosts
    profiles:
      - hostmanager

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.2
    volumes:
      - .docker/logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    profiles:
      - debug

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - DOMAIN_NAME=default:kibana.poc.loc
    depends_on:
      - elasticsearch
    profiles:
      - debug
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kibana.rule=Host(`kibana.localhost`)"
      - "traefik.http.routers.kibana.entrypoints=web"

  filebeat:
    build:
      dockerfile: Dockerfile
      context: .docker/filebeat
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - logstash
    profiles:
      - debug

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment:
      - discovery.type=single-node
      - cluster.name=docker-logs-elk-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2G -Xmx2G"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    profiles:
      - debug

  taurus:
    image: blazemeter/taurus
    volumes:
        - ./tests/Load/:/bzt-configs
        - ./var/blazemeter-artifacts:/tmp/artifacts
    command: /bzt-configs/basic.yaml
    profiles:
      - test

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
      DOMAIN_NAME: default:database.symfony.loc
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  esdata: ~

###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
